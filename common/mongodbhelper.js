/**
 * Created by lea on 2016-01-29.
 */
var mongodb=require('mongodb');
var enums=require('./enums');

var  server  = new mongodb.Server(enums.mongoDb.connectionString, enums.mongoDb.port, {auto_reconnect:true});
var  db = new mongodb.Db(enums.mongoDb.database, server, {safe:true});
var safeOption={safe:true};
function dbexecutor()
{
    this.test=function()
    {

    },
    this.find=function(col,query,callback)
    {
        db.open(function(err,db)
            {
                if(!err)
                {
                    db.createCollection(col,safeOption,function(err,collection){
                        if(!err)
                        {
                           collection.find(query).toArray(function(err,docs)
                               {
                                   callback(err,docs);
                                   db.close();
                               }
                           )
                        }
                    })
                }
            }
        )
    },
        this.insertOne=function(col,doc,callback)
        {
            db.open(function(err,db)
                {
                    if(!err)
                    {
                        db.createCollection(col,safeOption,function(err,collection){
                            if(!err)
                            {
                                collection.insertOne(doc,function(err,result)
                                {
                                    callback(err,result);
                                    db.close();
                                })
                            }
                        })
                    }
                }
            )
        },
        this.insertMany=function(col,docs,callback)
        {
            db.open(function(err,db)
                {
                    if(!err)
                    {
                        db.createCollection(col,safeOption,function(err,collection){
                            if(!err)
                            {
                                collection.insertMany(docs, function (err,result) {
                                    callback(err,result);
                                    db.close();
                                })

                            }
                        })
                    }
                }
            )
        },
        this.updateOne=function(col,query,doc,callback)
        {
            db.open(function(err,db)
                {
                    if(!err)
                    {
                        db.createCollection(col,safeOption,function(err,collection){
                            if(!err)
                            {
                               collection.updateOne(query,doc,function(err,result){
                                  callback(err,result);
                                   db.close();
                               });
                            }
                        })
                    }
                }
            )
        },
        this.updateMany=function(col,query,docs,callback)
        {
            db.open(function(err,db)
                {
                    if(!err)
                    {
                        db.createCollection(col,safeOption,function(err,collection){
                            if(!err)
                            {
                               collection(query,docs,function(err,result){
                                   callback(err,result);
                                   db.close();
                               })
                            }
                        })
                    }
                }
            )
        },
        this.deleteOne=function(col,docs,callback)
        {
            db.open(function(err,db)
                {
                    if(!err)
                    {
                        db.createCollection(col,safeOption,function(err,collection){
                            if(!err)
                            {
                                collection.deleteOne(doc,function(err,result){
                                    callback(err,result);
                                    db.close();
                                })
                            }
                        })
                    }
                }
            )
        },
    this.deleteMany=function(col,docs,callback)
    {
        db.open(function(err,db)
            {
                if(!err)
                {
                    db.createCollection(col,safeOption,function(err,collection){
                        if(!err)
                        {
                            collection.deleteMany(docs,function(err,result)
                            {
                                callback(err,result);
                                db.close();
                            })
                        }
                    })
                }
            }
        )
    }

}

module.exports=dbexecutor;